{"version":3,"sources":["webpack:///../app/server.js?1bab"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;;;AACA;;;;AAEA,KAAM,MAAM,oBAAN;AACN,KAAM,SAAS,oBAAQ,EAAR,GAAT;AACN,KAAM,WAAW,6BAAY,QAAZ,IAAwB,WAAxB;AACjB,KAAM,OAAO,6BAAY,IAAZ,IAAoB,IAApB;;;;;;;;;;;;AAYb,KAAI,OAAuC;AACzC,OAAM,SAAS,QAAQ,2BAAR,CAAT,CADmC;EAA3C,MAEO;AACL,OAAI,UAAS,oBAAQ,EAAR,CAAT,CADC;AAEL,OAAM,WAAW,uBAAQ,OAAR,CAAX,CAFD;AAGL,OAAI,GAAJ,CAAQ,6BAAqB,QAArB,EAA+B,EAAE,QAAQ,KAAR,EAAjC,CAAR,EAHK;AAIL,OAAI,GAAJ,CAAQ,uCAAqB,QAArB,CAAR,EAJK;EAFP;;;;;;;;;;;;;;;;;;;;AA4BA,KAAI,GAAJ,yBAAQ;;;;;AACN,gBAAK,IAAL,GAAY,WAAZ;;kBACkB,uBAAM,kBAAQ,IAAR,CAAa,aAAb,CAAN,EAAmC,EAAE,KAAK,EAAE,MAAM,KAAN,EAAP,EAArC;;;AAAlB,gBAAK,IAAL;;;;;;;;EAFM,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA,KAAI,GAAJ,CAAQ,wBAAR;;;;;;;;;;AAUA,KAAI,MAAJ,CAAW,IAAX,EAAiB,YAAa;;AAE5B,WAAQ,IAAR,CAAa,4BAAb,EAF4B;AAG5B,WAAQ,IAAR,CAAa,4BAAb,EAA2C,QAA3C,EAAqD,IAArD,EAH4B;EAAb,CAAjB;;AAMA,KAAI,IAAJ,EAAa;AACX,OAAI,MAAY;AACd,aAAQ,GAAR,CAAY,uCAAZ,EADc;AAEd,YAAO,GAAP,CAAW,MAAX,GAFc;AAGd,YAAO,GAAP,CAAW,gBAAX,CAA4B,UAAC,MAAD,EAAY;AACtC,WAAI,WAAW,OAAX,EAAoB;AACtB,oBAAW;kBAAM,QAAQ,IAAR,CAAa,CAAb;UAAN,EAAuB,CAAlC,EADsB;QAAxB;MAD0B,CAA5B,CAHc;IAAhB","file":"0.454537fbf77ce2defc20.hot-update.js","sourcesContent":["import axios from 'axios';\nimport helpers from '../configs/helpers';\nimport koa from 'koa';\nimport compress from 'koa-compress';\nimport fs from 'fs';\nimport serve from 'koa-static';\nimport proxy from 'koa-proxy';\nimport userAgent from 'koa-useragent';\nimport request from 'koa-request';\nimport cors from 'koa-cors';\nimport logger from 'koa-logging';\nimport path from 'path';\nimport views from 'co-views';\nimport webpack from 'webpack';\nimport webpackDevMiddleware from 'koa-webpack-dev';\nimport webpackHotMiddleware from 'koa-webpack-hot-middleware';\n\nimport { DESCRIPTION, IMAGE_URL, SERVER_URL, SITE_NAME } from './scripts/constants/constants';\nimport HtmlCompilerWatcher from '../configs/htmlCompilerWatcher';\nimport 'babel-polyfill';\n\nconst app = koa();\nconst router = require('koa-router')();\nconst hostname = process.env.HOSTNAME || 'localhost';\nconst port = process.env.PORT || 8000;\n\n// axios.get(`${SERVER_URL}/posts`).then((response) => {\n//   fs.writeFile('./cache.json', JSON.stringify(response.data), 'utf8', (error) => {\n//     console.error(error);\n//     fs.readFile('./cache.json', 'utf8', (err, data) => {\n//       if (err) throw err;\n//       console.log('cache.json', data.toString());\n//     });\n//   });\n// });\n\nif (process.env.NODE_ENV === 'production') {\n  const config = require('../configs/webpack.server');\n} else {\n  let config = require('../configs/webpack.server-watch');\n  const compiler = webpack(config);\n  app.use(webpackDevMiddleware(compiler, { noInfo: false }));\n  app.use(webpackHotMiddleware(compiler));\n}\n\n\n// let htmlRenderer = new HtmlCompilerWatcher(META, html => {\n//   app.use(function*() {\n//     let req = this.request.href.split('/');\n//     let params = req.slice(req.length - 2, req.length);\n//     if (params[0] === 'posts' && params[1]) {\n//       const options = {\n//         method: 'GET',\n//         url: `${SERVER_URL}/posts/${params[1]}`\n//       };\n//       const response = yield request(options);\n//       this.type = 'text/html';\n//     } else {\n//       this.type = 'text/html';\n//       this.body = html;\n//     }\n//   });\n// });\n\napp.use(function*() {\n  this.type = 'text/html';\n  this.body = yield views(helpers.root('static/dist'), { map: { html: 'ejs' } });\n  // let req = this.request.href.split('/');\n  // let params = req.slice(req.length - 2, req.length);\n  // if (params[0] === 'posts' && params[1]) {\n  //   const options = {\n  //     method: 'GET',\n  //     url: `${SERVER_URL}/posts/${params[1]}`\n  //   };\n  //   const response = yield request(options);\n  //   this.type = 'text/html';\n  // } else {\n  //   this.type = 'text/html';\n  //   this.body = html;\n  // }\n});\n\n\n// compiler.apply(htmlRenderer);\n\n// let htmlRenderer = new HtmlCompilerWatcher(META, html => {\n//   router.get('*', function *(next) {\n//     this.type = 'text/html';\n//     this.body = html;\n//     console.log(this.body);\n//     yield next;\n//   });\n// });\n\n\n// router.get('*', function *(next) {\n//   console.log(next);\n//   this.type = 'text/html';\n//   // this.body = html;\n//   yield next;\n// });\n\n// console.log(config.meta);\n\n// console.log(compiler.plugin);\n\n// compiler.run((err, stats) => {\n//\n// });\n//\n// compiler.watch({ // watch options:\n//     aggregateTimeout: 300, // wait so long for more changes\n//     poll: true // use polling instead of native watchers\n// }, (err, stats) => {\n//   // console.log(stats);\n//   // console.error(err);\n// });\n\n\n// function applyMeta(request, data) {\n//   data = JSON.parse(data.body);\n//   Object.assign(META, {\n//     title: data.title,\n//     description: data.description,\n//     publishedTime: data.created_at,\n//     modified_time: data.updated_at,\n//     url: request.href\n//   });\n//   compiler.apply(new HtmlCompilerWatcher(META));\n// }\n\n\n// console.info('environment: ', process.env.NODE_ENV);\n\n// if (process.env.NODE_ENV === 'production') {\n//   app.use(serve(path.join(root, 'static', 'dist')));\n// } else {\n//   app.use(proxy({\n//     host:  `${hostname}:${port}`,\n//     match: /^\\/static\\//\n//   }));\n// }\n\napp.use(cors());\n\n// app.use(router.routes());\n\n// app.use(router.allowedMethods());\n\n// app.use(compress());\n\n// app.use(userAgent());\n\napp.listen(port, (...args) => {\n  // console.log('args: ', ...args);\n  console.info('==> âœ…  Server is listening');\n  console.info('==> ðŸŒŽ  Go to http://%s:%s', hostname, port);\n});\n\nif (__DEV__) {\n  if (module.hot) {\n    console.log('[HMR] Waiting for server-side updates');\n    module.hot.accept();\n    module.hot.addStatusHandler((status) => {\n      if (status === 'abort') {\n        setTimeout(() => process.exit(0), 0);\n      }\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../app/server.js\n **/"],"sourceRoot":""}